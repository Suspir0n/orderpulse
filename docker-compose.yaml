version: '3'

services:
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongodb

  app:
    build: .
    container_name: fastapi-app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - mongodb
    environment:
      - MONGO_URI=mongodb://root:example@mongodb:27017/

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch-sonarqube
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - sonarnet
    deploy:
      resources:
        limits:
          memory: 2G

  scanner:
    image: sonarsource/sonar-scanner-cli:latest
    container_name: scanner-test-sonarqube
    volumes:
      - .:/usr/src
    working_dir: /usr/src
    command: sonar-scanner \
      -Dsonar.host.url=http://localhost:9000 \
      -Dsonar.sources=. \
      -Dsonar.tests=app/tests
    networks:
      - sonarnet

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      - elasticsearch
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
    volumes:
      - SonarQube_data:/opt/sonarqube/data
      - SonarQube_extensions:/opt/sonarqube/extensions
      - SonarQube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    networks:
      - sonarnet

volumes:
  SonarQube_data:
  SonarQube_extensions:
  SonarQube_logs:
  postgresql:
  postgresql_data:
  elasticsearch_data:
  mongodb_data:

networks:
  sonarnet: